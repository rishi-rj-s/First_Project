<!--
=========================================================
* Material Dashboard 2 - v3.1.0
=========================================================

* Product Page: https://www.creative-tim.com/product/material-dashboard
* Copyright 2023 Creative Tim (https://www.creative-tim.com)
* Licensed under MIT (https://www.creative-tim.com/license)
* Coded by Creative Tim

=========================================================

* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
-->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link rel="apple-touch-icon" sizes="76x76" href="/img/admin/apple-icon.png">
  <link rel="icon" type="image/png" href="/img/admin/favicon.png">
  <title>RISHI STUDIO</title>
  <!--     Fonts and icons     -->
  <link rel="stylesheet" type="text/css"
    href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900|Roboto+Slab:400,700" />
  <!-- Nucleo Icons -->
  <link href="/css/admin/nucleo-icons.css" rel="stylesheet" />
  <link href="/css/admin/nucleo-svg.css" rel="stylesheet" />
  <!-- Font Awesome Icons -->
  <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
  <!-- Material Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Round" rel="stylesheet">
  <!-- CSS Files -->
  <link id="pagestyle" href="/css/admin/material-dashboard.css?v=3.1.0" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.0/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.0/dist/sweetalert2.all.min.js"></script>
  <style>
    .text-end {
      position: absolute;
      right: 0;
      top: 50%;
      transform: translateY(-35%);
    }

    .object-fit-cover {
      object-fit: cover;
      height: 100px;
      width: 100px;
    }

    .status-dropdown {
      width: 150px;
      /* Adjust the width as needed */
      padding: 6px 12px;
      border: 1px solid #ccc;
      border-radius: 4px;
      background-color: #fff;
      color: #333;
      font-size: 14px;
    }

    .status-dropdown option {
      background-color: #fff;
      color: #333;
    }
  </style>
</head>

<body class="g-sidenav-show  bg-gray-200">
  <aside
    class="sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3   bg-gradient-dark"
    id="sidenav-main">
    <hr class="horizontal light mt-0 mb-2">
    <div class="collapse navbar-collapse  w-auto " id="sidenav-collapse-main">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link text-white " href="/admin/dashboard">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">dashboard</i>
            </div>
            <span class="nav-link-text ms-1">Dashboard</span>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-white" href="/admin/viewproducts">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">table_view</i>
            </div>
            <span class="nav-link-text ms-1">Products</span>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-white" href="/admin/category">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">table_view</i>
            </div>
            <span class="nav-link-text ms-1">Category</span>
          </a>
        </li>

        <li class="nav-item">
          <a class="nav-link text-white " href="/admin/viewusers">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">person</i>
            </div>
            <span class="nav-link-text ms-1">Users</span>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-white active bg-gradient-primary" href="/admin/vieworders">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">receipt</i>
            </div>
            <span class="nav-link-text ms-1">Orders</span>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-white " href="/admin/viewcoupons">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">local_offer</i>
            </div>
            <span class="nav-link-text ms-1">Coupons</span>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-white " href="">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">card_giftcard</i>
            </div>
            <span class="nav-link-text ms-1">Offers</span>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-white " href="/admin/logout">
            <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
              <i class="material-icons opacity-10">logout</i>
            </div>
            <span class="nav-link-text ms-1">Logout</span>
          </a>
        </li>
      </ul>
    </div>
  </aside>
  <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg">
    <!-- Navbar -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl" id="navbarBlur"
      data-scroll="true">
      <div class="container-fluid py-1 px-3">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
            <li class="breadcrumb-item text-sm"><a class="opacity-5 text-dark" href="javascript:;">Pages</a></li>
            <li class="breadcrumb-item text-sm text-dark active" aria-current="page">Orders</li>
          </ol>
          <h6 class="font-weight-bolder mb-0">Orders</h6>
        </nav>
      </div>
    </nav>
    <!-- End Navbar -->
    <div class="container-fluid py-4">
      <div class="row">
        <div class="col-12">
          <div class="card my-4">
            <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
              <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3">
                <h6 class="text-white text-capitalize ps-3">Orders</h6>
              </div>
              <div class="card-body px-0 pb-2">
                <div class="bg-light p-4">
                  <div class="nav nav-tabs mb-4" role="tablist">
                    <a class="nav-item nav-link active" data-bs-toggle="tab" href="#nav-pending">Pending</a>
                    <a class="nav-item nav-link" data-bs-toggle="tab" href="#nav-delivered">Delivered</a>
                    <a class="nav-item nav-link" data-bs-toggle="tab" href="#nav-processing">Processing</a>
                    <a class="nav-item nav-link" data-bs-toggle="tab" href="#nav-cancelled">Cancelled</a>
                    <a class="nav-item nav-link" data-bs-toggle="tab" href="#nav-returned">Returned</a>
                  </div>
                  <div class="tab-content">
                    <div class="tab-pane fade show active" id="nav-pending">
                      <div class="table-responsive">
                        <table class="table">
                          <thead>
                            <tr>
                              <th scope="col">Product Image</th>
                              <th scope="col">Product Name</th>
                              <th scope="col">Total Amount</th>
                              <th scope="col">Quantity</th>
                              <th scope="col">Order Date</th>
                              <th scope="col">Order Status</th>
                              <th scope="col">Action</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% orders.forEach(order=> { %>
                              <% order.orderedItems.forEach(items=> { %>
                                <% if (items.status==="Pending" || items.status==="Shipped" ) { %>
                                  <tr>
                                    <td><img class="object-fit-cover" src="/<%= items.productId.images[0] %>"
                                        alt="Product Image"></td>
                                    <td class="text-center align-middle">
                                      <%= items.productId.p_name %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= (items.productId.total_price) * (items.quantity) %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.quantity %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= order.orderDate.toLocaleDateString() %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.status %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <select id="<%= items.productId._id %>" class="form-select status-dropdown"
                                        data-product-id="<%= items.productId._id %>" data-order-id="<%= order._id %>">
                                        <% if (items.status==='Pending' ) { %>
                                          <option value="Pending" <%=items.status==='Pending' ? 'selected' : '' %>
                                            >Pending</option>
                                          <option value="Shipped" <%=items.status==='Shipped' ? 'selected' : '' %>
                                            >Shipped</option>
                                          <option value="Delivered" <%=items.status==='Delivered' ? 'selected' : '' %>
                                            >Delivered</option>
                                          <% } else if (items.status==='Shipped' ) { %>
                                            <option value="Shipped" <%=items.status==='Shipped' ? 'selected' : '' %>
                                              >Shipped</option>
                                            <option value="Delivered" <%=items.status==='Delivered' ? 'selected' : '' %>
                                              >Delivered</option>
                                            <% } %>
                                      </select>
                                    </td>
                                  </tr>
                                  <script>
                                    document.addEventListener('DOMContentLoaded', function () {
                                      const dropdowns = document.querySelectorAll('.status-dropdown');

                                      dropdowns.forEach(dropdown => {
                                        dropdown.addEventListener('change', function () {
                                          const selectedOption = this.value;
                                          const productId = this.id;
                                          const orderId = this.getAttribute('data-order-id'); // Assuming you have a data attribute for order ID

                                          let url;

                                          if (selectedOption === 'Shipped') {
                                            url = `/admin/statusshipped/${productId}?oid=${orderId}`;
                                          } else if (selectedOption === 'Delivered') {
                                            url = `/admin/statusdelivered/${productId}?oid=${orderId}`;
                                          }

                                          if (url) {
                                            // Display SweetAlert confirmation dialog
                                            Swal.fire({
                                              title: 'Are you sure?',
                                              text: 'Do you want to change the status?',
                                              icon: 'warning',
                                              showCancelButton: true,
                                              confirmButtonColor: '#3085d6',
                                              cancelButtonColor: '#d33',
                                              confirmButtonText: 'Yes',
                                              cancelButtonText: 'No',
                                            }).then((result) => {
                                              if (result.isConfirmed) {
                                                fetch(url, {
                                                  method: 'get', // Use GET method for triggering the routes
                                                })
                                                  .then((response) => {
                                                    if (!response.ok) {
                                                      throw new Error('Failed to update status');
                                                    }
                                                    return response.json();
                                                  })
                                                  .then((data) => {
                                                    // Handle success or error response from the server
                                                    console.log(data);
                                                    if (data.success) {
                                                      Swal.fire({
                                                        title: "Processing",
                                                        text: data.message,
                                                        icon: "success",
                                                      }).then(() => {
                                                        // Reload the page or perform any other actions
                                                        window.location.reload();
                                                      });
                                                    } else {
                                                      Swal.fire({
                                                        title: "Failed!",
                                                        text: data.message,
                                                        icon: "error",
                                                      });
                                                    }
                                                  })
                                                  .catch((error) => {
                                                    console.error("Error:", error);
                                                    Swal.fire({
                                                      title: "Error!",
                                                      text: "Something went wrong.",
                                                      icon: "error",
                                                    });
                                                  });
                                              }
                                            });
                                          }
                                        });
                                      });
                                    });
                                  </script>
                                  <% } %>
                                    <% }) %>
                                      <% }) %>
                          </tbody>
                        </table>
                      </div>
                    </div>
                    <div class="tab-pane fade" id="nav-delivered">
                      <div class="table-responsive">
                        <table class="table">
                          <thead>
                            <tr>
                              <th scope="col">Product Image</th>
                              <th scope="col">Product Name</th>
                              <th scope="col">Total Amount</th>
                              <th scope="col">Quantity</th>
                              <th scope="col">Order Date</th>
                              <th scope="col">Order Status</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% orders.forEach(order=> {%>
                              <% order.orderedItems.forEach(items=> { %>
                                <% if (items.status==="Delivered" ) { %>
                                  <tr>
                                    <td><img class="object-fit-cover" src="/<%= items.productId.images[0] %>"
                                        alt="Product Image"></td>
                                    <td class="text-center align-middle">
                                      <%= items.productId.p_name %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= (items.productId.total_price)*(items.quantity) %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.quantity %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= order.orderDate.toLocaleDateString() %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.status %>
                                    </td>
                                  </tr>
                                  <% } %>
                                    <% }) %>
                                      <% }) %>
                          </tbody>
                        </table>
                      </div>
                    </div>
                    <div class="tab-pane fade" id="nav-processing">
                      <div class="table-responsive">
                        <table class="table">
                          <thead>
                            <tr>
                              <th scope="col">Product Image</th>
                              <th scope="col">Product Name</th>
                              <th scope="col">Total Amount</th>
                              <th scope="col">Quantity</th>
                              <th scope="col">Order Date</th>
                              <th scope="col">Order Status</th>
                              <th scope="col">Action</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% orders.forEach(order=> {%>
                              <% order.orderedItems.forEach(items=> { %>
                                <% if (items.status==="Processing" ) { %>
                                  <tr>
                                    <td><img class="object-fit-cover" src="/<%= items.productId.images[0] %>"
                                        alt="Product Image"></td>
                                    <td class="text-center align-middle">
                                      <%= items.productId.p_name %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= (items.productId.total_price)*(items.quantity) %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.quantity %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= order.orderDate.toLocaleDateString() %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.status %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <button id="accept<%= items.productId._id %>" class="btn btn-success accept"
                                        data-productid="<%= items.productId._id %>" data-orderid="<%= order._id %>">
                                        Accept
                                      </button>
                                      <button id="reject<%= items.productId._id %>" class="btn btn-danger reject"
                                        data-productid="<%= items.productId._id %>" data-orderid="<%= order._id %>">
                                        Reject
                                      </button>
                                    </td>
                                  </tr>
                                  <script>
                                    document.addEventListener("DOMContentLoaded", function () {
                                      // Add event listener to Accept buttons
                                      document.querySelectorAll('.accept').forEach(button => {
                                        button.addEventListener('click', function () {
                                          const productId = this.getAttribute('data-productid');
                                          const orderId = this.getAttribute('data-orderid'); // Replace with actual order ID

                                          // Display SweetAlert confirmation dialog
                                          Swal.fire({
                                            title: "Are you sure?",
                                            text: "Accept this return?",
                                            icon: "info",
                                            showCancelButton: true,
                                            confirmButtonColor: "#3085d6",
                                            cancelButtonColor: "#d33",
                                            confirmButtonText: "Accept!",
                                          }).then((result) => {
                                            if (result.isConfirmed) {
                                              // Send AJAX request to accept route
                                              fetch(`/admin/acceptreturn/${productId}?oid=${orderId}`, {
                                                method: "GET",
                                              })
                                                .then((response) => {
                                                  if (!response.ok) {
                                                    throw new Error("Failed to accept return");
                                                  }
                                                  return response.json(); // Parse JSON response
                                                })
                                                .then((data) => {
                                                  // Handle success or error response from the server
                                                  console.log(data);
                                                  if (data.success) {
                                                    Swal.fire({
                                                      title: "Processing",
                                                      text: data.message,
                                                      icon: "success",
                                                    }).then(() => {
                                                      // Reload the page or perform any other actions
                                                      window.location.reload();
                                                    });
                                                  } else {
                                                    Swal.fire({
                                                      title: "Failed!",
                                                      text: data.message,
                                                      icon: "error",
                                                    });
                                                  }
                                                })
                                                .catch((error) => {
                                                  console.error("Error:", error);
                                                  Swal.fire({
                                                    title: "Error!",
                                                    text: "Something went wrong.",
                                                    icon: "error",
                                                  });
                                                });
                                            }
                                          });
                                        });
                                      });

                                      // Add event listener to Reject buttons
                                      document.querySelectorAll('.reject').forEach(button => {
                                        button.addEventListener('click', function () {
                                          const productId = this.getAttribute('data-productid');
                                          const orderId = this.getAttribute('data-orderid'); // Replace with actual order ID

                                          // Display SweetAlert confirmation dialog
                                          Swal.fire({
                                            title: "Are you sure?",
                                            text: "Reject this return?",
                                            icon: "warning",
                                            showCancelButton: true,
                                            confirmButtonColor: "#d33",
                                            cancelButtonColor: "#3085d6",
                                            confirmButtonText: "Reject!",
                                          }).then((result) => {
                                            if (result.isConfirmed) {
                                              // Send AJAX request to reject route
                                              fetch(`/admin/rejectreturn/${productId}?oid=${orderId}`, {
                                                method: "GET",
                                              })
                                                .then((response) => {
                                                  if (!response.ok) {
                                                    throw new Error("Failed to reject return");
                                                  }
                                                  return response.json(); // Parse JSON response
                                                })
                                                .then((data) => {
                                                  // Handle success or error response from the server
                                                  console.log(data);
                                                  if (data.success) {
                                                    Swal.fire({
                                                      title: "Processing",
                                                      text: data.message,
                                                      icon: "success",
                                                    }).then(() => {
                                                      // Reload the page or perform any other actions
                                                      window.location.reload();
                                                    });
                                                  } else {
                                                    Swal.fire({
                                                      title: "Failed!",
                                                      text: data.message,
                                                      icon: "error",
                                                    });
                                                  }
                                                })
                                                .catch((error) => {
                                                  console.error("Error:", error);
                                                  Swal.fire({
                                                    title: "Error!",
                                                    text: "Something went wrong.",
                                                    icon: "error",
                                                  });
                                                });
                                            }
                                          });
                                        });
                                      });
                                    });
                                  </script>
                                  <% } %>
                                    <% }) %>
                                      <% }) %>
                          </tbody>
                        </table>
                      </div>
                    </div>
                    <div class="tab-pane fade" id="nav-cancelled">
                      <div class="table-responsive">
                        <table class="table">
                          <thead>
                            <tr>
                              <th scope="col">Product Image</th>
                              <th scope="col">Product Name</th>
                              <th scope="col">Total Amount</th>
                              <th scope="col">Quantity</th>
                              <th scope="col">Order Date</th>
                              <th scope="col">Order Status</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% orders.forEach(order=> {%>
                              <% order.orderedItems.forEach(items=> { %>
                                <% if (items.status==="Cancelled" ) { %>
                                  <tr>
                                    <td><img class="object-fit-cover" src="/<%= items.productId.images[0] %>"
                                        alt="Product Image"></td>
                                    <td class="text-center align-middle">
                                      <%= items.productId.p_name %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= (items.productId.total_price)*(items.quantity) %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.quantity %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= order.orderDate.toLocaleDateString() %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.status %>
                                    </td>
                                  </tr>
                                  <% } %>
                                    <% }) %>
                                      <% }) %>
                          </tbody>
                        </table>
                      </div>
                    </div>
                    <div class="tab-pane fade" id="nav-returned">
                      <div class="table-responsive">
                        <table class="table">
                          <thead>
                            <tr>
                              <th scope="col">Product Image</th>
                              <th scope="col">Product Name</th>
                              <th scope="col">Total Amount</th>
                              <th scope="col">Quantity</th>
                              <th scope="col">Order Date</th>
                              <th scope="col">Order Status</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% orders.forEach(order=> {%>
                              <% order.orderedItems.forEach(items=> { %>
                                <% if (items.status==="Returned" ) { %>
                                  <tr>
                                    <td><img class="object-fit-cover" src="/<%= items.productId.images[0] %>"
                                        alt="Product Image"></td>
                                    <td class="text-center align-middle">
                                      <%= items.productId.p_name %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= (items.productId.total_price)*(items.quantity) %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.quantity %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= order.orderDate.toLocaleDateString() %>
                                    </td>
                                    <td class="text-center align-middle">
                                      <%= items.status %>
                                    </td>
                                  </tr>
                                  <% } %>
                                    <% }) %>
                                      <% }) %>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="pagination mt-3 d-flex justify-content-center" id="pagination">
                <!-- Pagination buttons will be added here dynamically -->
              </div>
            </div>
          </div>
        </div>
      </div>
  </main>

  <script>
    const productsPerPage = 6; // Number of products to display per page
    let currentPage = 1;

    // Function to display products based on current page
    function displayProducts() {
      const productsTable = document.getElementById('productsTable');
      const rows = productsTable.querySelectorAll('tbody tr');
      const numPages = Math.ceil(rows.length / productsPerPage);

      // Hide all rows
      rows.forEach(row => row.style.display = 'none');

      // Calculate start and end index for current page
      const startIndex = (currentPage - 1) * productsPerPage;
      const endIndex = Math.min(startIndex + productsPerPage, rows.length);

      // Display rows for current page
      for (let i = startIndex; i < endIndex; i++) {
        rows[i].style.display = '';
      }

      // Create pagination buttons
      const paginationDiv = document.getElementById('pagination');
      paginationDiv.innerHTML = '';

      if (numPages > 1) {
        const prevButton = document.createElement('button');
        prevButton.textContent = 'Prev';
        prevButton.className = 'btn btn-primary me-2';
        prevButton.disabled = currentPage === 1;
        prevButton.addEventListener('click', () => {
          if (currentPage > 1) {
            currentPage--;
            displayProducts();
          }
        });
        paginationDiv.appendChild(prevButton);

        const nextButton = document.createElement('button');
        nextButton.textContent = 'Next';
        nextButton.className = 'btn btn-primary';
        nextButton.disabled = currentPage === numPages;
        nextButton.addEventListener('click', () => {
          if (currentPage < numPages) {
            currentPage++;
            displayProducts();
          }
        });
        paginationDiv.appendChild(nextButton);
      }
    }

    // Initial display of products
    displayProducts();
  </script>

  onclick="return deleteC(event)"
  <script>
    function deleteP(event) {
      event.preventDefault(); // Prevent the default behavior of the anchor tag
      const deleteUrl = event.currentTarget.getAttribute('href'); // Retrieve the href attribute
      // console.log("Delete URL:", deleteUrl); // Debugging statement

      Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!"
      }).then((result) => {
        if (result.isConfirmed) {
          // Redirect to the delete URL
          window.location.href = deleteUrl;
        }
      });
    }
  </script>

  <script>
    const urlParams = new URLSearchParams(window.location.search);
    const message = urlParams.get('msg');
    if (typeof message !== 'undefined') {
      if (message.includes('success')) {
        Swal.fire({
          title: 'Success!',
          text: 'Product added successfully',
          icon: 'success',
          confirmButtonText: 'Cool'
        })
        window.history.replaceState({}, document.title, window.location.pathname);
      } else if (message.includes('updated')) {
        Swal.fire({
          title: 'Success!',
          text: 'Successfully updated the product',
          icon: 'success',
          confirmButtonText: 'Cool'
        })
        window.history.replaceState({}, document.title, window.location.pathname);
      } else if (message.includes('deleted')) {
        Swal.fire({
          title: 'Success!',
          text: 'Successfully deleted the product',
          icon: 'success',
          confirmButtonText: 'Cool'
        })
        window.history.replaceState({}, document.title, window.location.pathname);
      }
    }
  </script>
  <!--   Core JS Files   -->
  <script src="/js/admin/core/popper.min.js"></script>
  <script src="/js/admin/core/bootstrap.min.js"></script>
  <script src="/js/admin/plugins/perfect-scrollbar.min.js"></script>
  <script src="/js/admin/plugins/smooth-scrollbar.min.js"></script>
  <script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
      var options = {
        damping: '0.5'
      }
      Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
  </script>
  <!-- Github buttons -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="/js/admin/material-dashboard.min.js?v=3.1.0"></script>
  <script src="/js/admin/function.js"></script>
</body>

</html>