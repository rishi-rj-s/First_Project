<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://kit.fontawesome.com/64d58efce2.js" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="/css/user/style3.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.0/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.0/dist/sweetalert2.all.min.js"></script>
  <title>RISHI STUDIO</title>
  <link rel="icon" href="/img/landing/favicon.png">
</head>

<body>
  <div class="container">
    <div class="forms-container">
      <div class="signin-signup">
        <form action="/user/login" method="post" class="sign-in-form" onsubmit="return validateForm()">
          <h1 class="title1">RISHI STUDIO</h1>
          <h2 class="title"> Sign In</h2>
          <div class="input-field">
            <i class="fas fa-user"></i>
            <input name="username" type="text" placeholder="Username" />
          </div>
          <div class="input-field">
            <i class="fas fa-lock"></i>
            <input name="password" type="password" placeholder="Password" />
          </div>
          <!-- Forgot Password link -->
          <a href="/user/forgot" class="forgot-password">Forgot Password?</a>
          <input type="submit" value="Login" class="btn solid" />
          <p class="social-text">Or Sign in with social platforms</p>
          <div class="social-media">
            <a href="/auth/google" class="social-icon">
              <i class="fab fa-google"></i>
            </a>
          </div>
          <!-- Admin Login button -->
          <a href="/admin/" class="admin-login-btn">Admin Login</a>
        </form>
        <form action="/user/registerfirst" method="post" onsubmit="return validateRForm()" class="sign-up-form">
          <h1 class="title1">RISHI STUDIO</h1>
          <h2 class="title">Sign up</h2>
          <div class="input-field">
            <i class="fas fa-user"></i>
            <input name="name" type="text" placeholder="name" />
          </div>
          <div class="input-field">
            <i class="fas fa-envelope"></i>
            <input name="email" type="email" placeholder="Email" />
          </div>
          <div class="input-field">
            <i class="fas fa-lock"></i>
            <input name="newpassword" type="password" placeholder="Password" />
          </div>
          <input type="submit" class="btn" value="Sign up" />
          <p class="social-text">Or Sign up with social platforms</p>
          <div class="social-media">
            <a href="/auth/google" class="social-icon">
              <i class="fab fa-google"></i>
            </a>
          </div>
        </form>
      </div>
    </div>
    <script>
      function validateRForm() {
           const name = document.querySelector('[name="name"]');
           const email = document.querySelector('[name="email"]');
           const password = document.querySelector('[name="newpassword"]');

           // Check if any field is empty or contains only whitespace
           if (!name.value.trim() || !email.value.trim() || !password.value.trim()) {
                Swal.fire({
                     title: 'Error!',
                     text: 'All fields are necessary',
                     icon: 'error',
                     confirmButton: 'Retry'
                })
                return false; // Prevent form submission
           }

           return true; // Allow form submission
      }
 </script>
    <script>
      function validateForm(){
        const username = document.querySelector('[name="username"]');
        const password = document.querySelector('[name="password"]');
        if(!username.value.trim()){
          Swal.fire({
            title:"Error",
            text: "Username is empty!",
            icon: "error",
            confirmButtonText:'Retry!'
          })
          return false;
        }else if(!password.value.trim()){
          Swal.fire({
            title:"Error",
            text: "Password is empty!",
            icon: "error",
            confirmButtonText:'Retry!'
          })
          return false;
        }
        return true;
      }
    </script>

    <div class="panels-container">
      <div class="panel left-panel">
        <div class="content">
          <h3>New here ?</h3>
          <p>
            Come join us on our Fashion Journey!
          </p>
          <button class="btn transparent" id="sign-up-btn">
            Sign up
          </button>
        </div>
        <img src="/img/login/log.svg" class="image" alt="" />
      </div>
      <div class="panel right-panel">
        <div class="content">
          <h3>One of us ?</h3>
          <p>
            Welcome back our esteemed guest in this wonderful journey!
          </p>
          <button class="btn transparent" id="sign-in-btn">
            Sign in
          </button>
        </div>
        <img src="/img/login/register.svg" class="image" alt="" />
      </div>
    </div>
  </div>

  <script>
     const urlParams = new URLSearchParams(window.location.search);
     const error = urlParams.get('error');
     if (typeof error !== 'undefined') {
          if (error.includes('email')) {
               Swal.fire({
                    title: 'Error!',
                    text: 'No account existing for this email',
                    icon: 'error',
                    confirmButtonText: 'Cool'
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          } else if (error.includes('password')) {
               Swal.fire({
                    title: 'Error!',
                    text: 'Invalid Password',
                    icon: 'error',
                    confirmButtonText: 'Cool'
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          } else if (error.includes('blocked')) {
               Swal.fire({
                    title: 'Error!',
                    text: 'User Blocked',
                    icon: 'error',
                    confirmButtonText: 'Cool'
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          } else if (error.includes('server')) {
               Swal.fire({
                    title: 'Error!',
                    text: 'Server Error',
                    icon: 'error',
                    confirmButtonText: 'Cool'
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          } else if (error.includes('logout')) {
               Swal.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: 'Logged Out',
                    showConfirmButton: false,
                    timer: 1500
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          } else if (error.includes('success')) {
               Swal.fire({
                    title: 'Success!',
                    text: 'User Registered',
                    icon: 'success',
                    confirmButtonText: 'Cool'
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          } else if (error.includes('reset')) {
               Swal.fire({
                    position: 'top-start',
                    icon: 'success',
                    title: 'Password Changed',
                    showConfirmButton: false,
                    timer: 1500
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          } else if (error.includes('bad')) {
               Swal.fire({
                    title: 'Error!',
                    text: 'Bad Connection',
                    icon: 'error',
                    confirmButtonText: 'Cool'
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          }
     }
</script>
<script>
     const url = new URLSearchParams(window.location.search);
     const msg = url.get('msg');
     if (typeof msg !== 'undefined') {
          if (msg.includes('email')) {
               Swal.fire({
                    title: 'Error!',
                    text: 'User exists for this email',
                    icon: 'error',
                    confirmButtonText: 'OK'
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          } else if (msg.includes('error')) {
               Swal.fire({
                    title: 'Error!',
                    text: 'Error trying to register',
                    icon: 'error',
                    confirmButtonText: 'OK'
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          } else if (msg.includes('unable')) {
               Swal.fire({
                    title: 'Error!',
                    text: 'Unable to send OTP',
                    icon: 'error',
                    confirmButtonText: 'OK'
               })
               window.history.replaceState({}, document.title, window.location.pathname);
          }
     }
</script>

  <script>
    const sign_in_btn = document.querySelector("#sign-in-btn");
    const sign_up_btn = document.querySelector("#sign-up-btn");
    const container = document.querySelector(".container");

    sign_up_btn.addEventListener("click", () => {
      container.classList.add("sign-up-mode");
    });

    sign_in_btn.addEventListener("click", () => {
      container.classList.remove("sign-up-mode");
    });
  </script>
</body>

</html>

